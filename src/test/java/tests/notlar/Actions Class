=== Actions Class ====
➢ Actions class’ini kullanarak mouse ve klavye ile yapabilecegimiz tum islevleri gerceklestirebiliriz.
➢ Actions Class birçok kullanışlı mouse ve klavye işlevine sahiptir.
➢ Çift tıklama (double click), sürükleme ve bırakma(drag and drop), mouse’u hareket ettirme (mouse actions)
   gibi karmaşık mouse eylemleri icin veya Keyboard ile yapabilecegimiz pageUp, pageDown, shift, arrowDown gibi islemleri
   Actions classindan object ureterek driver ile yapabiliriz

=== Actions Class Kullanimi ====
➢ 1.Adım: Actions class’ta bir object oluşturulur.
           Actions actions= new Actions(driver);

➢ 2. Adım: Üzerinde çalışmak istediğiniz WebElement öğesini bulunur.
           WebElement element = driver.findElement(By.id("ID"));

➢ 3.Adim : Ardından bu webelement üzerinde action gerçekleştirilir. Örneğin tıklamak için.
            actions.click(element).perform();

   NOT : Action Class’ini her kullanmak istedigimizde yeniden obje olusturmamiz gerekmez.
         action objesi kullanilarak baslayan her komut, calismak icin perform() bekler.
         action objesi’ni bir kere olusturunca, istediginiz kadar action. ile baslayan komut yazar ve calismasi
         icin sonuna perform() yazariz.

====== Mouse Base Actions ======
■  doubleClick(): WebElement’e çift tıklama yapar
■  clickAndHold(): WebElement uzerinde click yapili olarak bizden komut bekler.
■  dragAndDrop(): WebElement’i bir noktadan diğerine sürükler ve bırakır
■  moveToElement(): Mouse’u istedigimiz WebElement’in uzerinde tutar
■  contextClick(): Mouse ile istedigimiz WebElement’e sag tiklama yapar.

====== Keyboard Base Actions ========
➢ Action Class’indan kullanacagimiz method’lar ile klavyedeki tuslari kontrol edebiliriz.
➢ Bunun icin 3 method kullaniriz.

■  sendKeys(): Öğeye bir dizi anahtar gönderir
■  keyDown(): Klavyede tuşa basma işlemi gerçekleştirir
■  keyUp(): Klavyede tuşu serbest bırakma işlemi gerçekleştirir




